SRC := reloc.c reloc_add_aarch64.c insn.h
TARGET := elvenrel
CFLAGS += -std=gnu11 -Ofast -DNDEBUG -DPAGE_SIZE=$(shell getconf PAGE_SIZE) -fno-stack-protector -fPIC -I/opt/homebrew/include
LDFLAGS += /opt/homebrew/lib/libelf.a
# Support both GAS and Apple-clang as
AS_VENDOR := $(word 1, $(shell $(AS) --version))
ifeq ($(AS_VENDOR), GNU)
	ASFLAGS += --strip-local-absolute
	as_defsym = --defsym $(1)=$(2)
else
	ASFLAGS += --target=aarch64-linux-gnu
	as_defsym = -Wa,-defsym,$(1)=$(2)
endif
# Optional test objects built by target ALL
REL := test_text_macos.o \
       test_rodata_macos.o \
       test_data_macos.o \
       test_bss_macos.o \
       test_cross_0_macos.o \
       test_cross_1_macos.o \
       test_bounce_macos.o

OBJ := $(addsuffix .o, $(basename $(filter %.s %.c %.cpp, $(SRC))))

$(TARGET): $(OBJ)
	$(CC) $^ $(LDFLAGS) -o $(TARGET)

reloc.o: reloc.c char_ptr_arr.h

reloc_add_aarch64.o: reloc_add_aarch64.c insn.h

test_bounce_macos.o: test_bounce_macos.s
	$(AS) $(ASFLAGS) $(call as_defsym,FB_DIM_X,$(shell tput cols)) $(call as_defsym,FB_DIM_Y,$(shell tput lines)) $(call as_defsym,FRAMES,1024) -o $@ $^

all: $(TARGET) $(REL)

clean:
	rm -f $(TARGET) $(OBJ) $(REL)
